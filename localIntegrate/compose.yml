services:
  app:
    image: na2na/artist:main
    restart: always
    ports:
      - "3000:3000"
    links:
      - redis
      - db
    networks:
      - internal_network
      - external_network
    env_file:
      - ./app/.env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

  redis:
    restart: always
    image: redis:7.0.11-alpine
    networks:
      - internal_network
    volumes:
      - redis:/data
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20

  db:
    restart: always
    image: postgres:15.3-bullseye
    networks:
      - internal_network
    env_file:
      - ./postgres/docker.env
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"
      interval: 5s
      retries: 20

  nginx:
    build:
      context: ./nginx
      dockerfile: ./Dockerfile
      args:
        API_BASE_URL: ${API_BASE_URL}
        VITE_MAPS_API_KEY: ${VITE_MAPS_API_KEY}
    restart: always
    links:
      - app
    depends_on:
      app:
        condition: service_started
    networks:
      - internal_network
      - external_network
    command: /bin/sh -c "envsubst '$$SERVER_NAME'< /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    env_file:
      - ./nginx/.env
    ports:
      - 80:80

networks:
  internal_network:
    internal: true
  external_network:


volumes:
  postgres:
  redis:
  app-cache:
